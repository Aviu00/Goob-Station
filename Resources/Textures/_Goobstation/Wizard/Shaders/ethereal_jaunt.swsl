// Modified stealth shader

light_mode unshaded;

uniform mediump vec2 reference;

const lowp float visibility = 0.1;
const lowp float time_scale = 1.0;
const lowp float blink_rate = 10.0;
const mediump float distance_scale = 0.008;

mediump mat2 rotate(mediump float t)
{
    return mat2(cos(t), -sin(t), sin(t), cos(t));
}

void fragment() {

    highp vec4 sprite = zTexture(UV);

    if (sprite.a == 0.0) {
        discard;
    }

    highp vec2 coords = (FRAGCOORD.xy + reference) * distance_scale;
    coords *= rotate(length(reference - FRAGCOORD.xy) * distance_scale);
    highp float w = sin(TIME + (coords.x + coords.y + 2.0*sin(TIME*time_scale) * sin(TIME*time_scale + coords.x - coords.y)) );

    w *= (3.0 + visibility * 2.0);

    w = mix(w, sin(TIME * blink_rate), 0.5);

    highp vec4 background = vec4(w,w,w,1.0);

    lowp float alpha;
    if (visibility>0.0)
      alpha = sprite.a * visibility;
    else
      alpha = 0.0;

    COLOR.xyz = mix(background.xyz, sprite.xyz, alpha);
    COLOR.a = 1.0;
}
